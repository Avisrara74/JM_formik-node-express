{"version":3,"sources":["serverAPI/index.js","components/app.js","serviceWorker.js","index.js"],"names":["signUpUrl","createNewUser","values","a","axios","post","registrationSchema","Yup","shape","name","max","required","password","min","matches","repeatPassword","oneOf","email","website","url","age","acceptTerms","App","handleOnRemoveSkill","idx","skills","setFieldValue","newSkillsList","filter","skill","indexOf","handleOnSubmit","setSubmitting","setFieldError","resetForm","status","alert","response","data","field","message","initialValues","currentSkill","validationSchema","onSubmit","handleChange","handleSubmit","errors","touched","className","htmlFor","id","onChange","value","placeholder","prefix","UserOutlined","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","handleOnChangeAge","defaultValue","length","map","skillIndex","key","uniqueId","type","onClick","renderSkillsList","event","currentSkillValue","currentSkillsList","preventDefault","trim","handleOnAddSkill","checked","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8fff8d74.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\n\nconst mainUrl = 'http://localhost:9000/';\nconst signUpUrl = `${mainUrl}sign-up`;\n\nexport const createNewUser = async (values) => axios.post(signUpUrl, values);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { uniqueId } from 'lodash';\nimport {\n  Input, InputNumber, Checkbox, Button,\n} from 'antd';\nimport { UserOutlined, EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport { createNewUser } from '../serverAPI/index';\nimport 'antd/dist/antd.css';\nimport './app.css';\n\nconst registrationSchema = Yup.object().shape({\n  name: Yup.string()\n    .max(50, 'Слишком длинное имя!')\n    .required('Заполните поле'),\n  password: Yup.string()\n    .min(8, 'Слишком короткий')\n    .max(50, 'Слишком длинный')\n    .matches(/[a-zA-Z]/, 'Пароль может содержать только латинские символы')\n    .matches(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одну цифру')\n    .matches(/(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')\n    .required('Заполните поле'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Пароли должны совпадать')\n    .required('Заполните поле'),\n  email: Yup.string()\n    .email('Некорректный email')\n    .required('Заполните поле'),\n  website: Yup.string()\n    .url('Некорректный адрес сайта'),\n  age: Yup.number()\n    .min(18, 'Вам должно быть 18')\n    .max(65, 'Почему нельзя регистрироваться после 65?'),\n  acceptTerms: Yup.bool()\n    .oneOf([true], 'Необходимо принять соглашение'),\n});\n\nconst App = () => {\n  const handleOnChangeAge = (value, setFieldValue) => {\n    setFieldValue('age', value);\n  };\n\n  const handleOnAddSkill = (event, setFieldValue, currentSkillValue, currentSkillsList) => {\n    event.preventDefault();\n    const isInputEmpty = currentSkillValue.trim().length === 0;\n    if (isInputEmpty) {\n      setFieldValue('currentSkill', '');\n      return false;\n    }\n\n    const newSkillsList = [...currentSkillsList, currentSkillValue];\n    setFieldValue('skills', newSkillsList);\n    setFieldValue('currentSkill', '');\n    return true;\n  };\n\n  const handleOnRemoveSkill = (idx, skills, setFieldValue) => () => {\n    const newSkillsList = skills.filter((skill) => skills.indexOf(skill) !== idx);\n    setFieldValue('skills', newSkillsList);\n  };\n\n  const renderSkillsList = (skills, setFieldValue) => {\n    if (skills.length === 0) return null;\n    return (\n      skills.map((skill) => {\n        const skillIndex = skills.indexOf(skill);\n        return (\n          <div key={uniqueId()} className=\"skill-list-wrapper\">\n            <div className=\"skill-list-wrapper-item\">{skill}</div>\n            <button\n              type=\"button\"\n              className=\"skill-list-wrapper-remove\"\n              onClick={handleOnRemoveSkill(skillIndex, skills, setFieldValue)}\n            >\n              X\n            </button>\n          </div>\n        );\n      })\n    );\n  };\n\n  const handleOnSubmit = async (values, { setSubmitting, setFieldError, resetForm }) => {\n    try {\n      const response = await createNewUser(values);\n      if (response.status === 200) {\n        resetForm();\n        alert('Вы успешно зарегистрированны'); // eslint-disable-line no-alert\n      }\n    } catch (err) {\n      const { field, message } = err.response.data;\n      setFieldError(field, message);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        password: '',\n        repeatPassword: '',\n        email: '',\n        website: '',\n        age: 0,\n        currentSkill: '',\n        skills: [],\n        acceptTerms: false,\n      }}\n      validationSchema={registrationSchema}\n      onSubmit={handleOnSubmit}\n    >\n      {({\n        values, handleChange, setFieldValue, handleSubmit, errors, touched,\n      }) => (\n        <Form className=\"form\">\n          <div className=\"form-item \">\n            <label htmlFor=\"userName\">Имя: </label>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              onChange={handleChange}\n              value={values.name}\n              placeholder=\"Введите ваше имя\"\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            />\n            {errors.name && touched.name ? (\n              <div className=\"error\">{errors.name}</div>\n            ) : null}\n          </div>\n\n          <div className=\"form-item \">\n            <label htmlFor=\"password\">Введите пароль: </label>\n            <Input.Password\n              id=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              value={values.password}\n              placeholder=\"Введите пароль\"\n              iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n            />\n            {errors.password && touched.password ? (\n              <div className=\"error\">{errors.password}</div>\n            ) : null}\n          </div>\n\n          <div className=\"form-item \">\n            <label htmlFor=\"repeatPassword\">Повторите пароль: </label>\n            <Input.Password\n              id=\"repeatPassword\"\n              name=\"repeatPassword\"\n              onChange={handleChange}\n              value={values.repeatPassword}\n              placeholder=\"Повторите пароль\"\n              iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n            />\n            {errors.repeatPassword && touched.repeatPassword ? (\n              <div className=\"error\">{errors.repeatPassword}</div>\n            ) : null}\n          </div>\n\n          <div className=\"form-item \">\n            <label htmlFor=\"email\">Email: </label>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={values.email}\n              placeholder=\"Введите ваш Email\"\n            />\n            {errors.email && touched.email ? (\n              <div className=\"error\">{errors.email}</div>\n            ) : null}\n          </div>\n\n          <div className=\"form-item \">\n            <label htmlFor=\"website\">Вебсайт (необязательно)</label>\n            <Input\n              id=\"website\"\n              name=\"website\"\n              onChange={handleChange}\n              value={values.website}\n              placeholder=\"Ваш вебсайт\"\n            />\n            {errors.website && touched.website ? (\n              <div className=\"error\">{errors.website}</div>\n            ) : null}\n          </div>\n\n          <div className=\"form-item \">\n            <label htmlFor=\"age\">Возраст: </label>\n            <InputNumber\n              id=\"age\"\n              name=\"age\"\n              onChange={(value) => handleOnChangeAge(value, setFieldValue)}\n              max={65}\n              min={0}\n              defaultValue={0}\n              value={values.age}\n              placeholder=\"Возраст\"\n            />\n            {errors.age && touched.age ? (\n              <div className=\"error\">{errors.age}</div>\n            ) : null}\n          </div>\n\n          <div className=\"form-item \">\n            <label htmlFor=\"skills\">Навыки: </label>\n            {(values.skills.length > 0) ? renderSkillsList(values.skills, setFieldValue) : null}\n            <Input\n              id=\"currentSkill\"\n              name=\"currentSkill\"\n              placeholder=\"Ваш навык\"\n              onChange={handleChange}\n              value={values.currentSkill}\n            />\n            <Button\n              type=\"danger\"\n              className=\"add-skill\"\n              onClick={(event) => (\n                handleOnAddSkill(event, setFieldValue, values.currentSkill, values.skills))}\n            >\n              Добавить навык\n            </Button>\n          </div>\n\n          <div className=\"form-item \">\n            <Checkbox\n              id=\"acceptTerms\"\n              name=\"acceptTerms\"\n              onChange={handleChange}\n              checked={values.acceptTerms}\n            >\n              Согласен с политикой\n            </Checkbox>\n            {errors.acceptTerms && touched.acceptTerms ? (\n              <div className=\"error\">{errors.acceptTerms}</div>\n            ) : null}\n          </div>\n          <div className=\"form-item \">\n            <Button type=\"primary\" onClick={handleSubmit}>Отправить</Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}